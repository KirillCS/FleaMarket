@model HomeViewModel
@inject IOptions<ApplicationConfigurations> Configuration
@{
    ViewData["Title"] = "Home Page";
}

@functions 
{
    public string SetImagePath(Item item) =>
        Configuration.Value.ImagesPath + (item.HasCover ? item.Cover.Path : Configuration.Value.ImagePlaceholderPath);
}

<div class="row">
    <div class="col-md-4 col-lg-3">
        <div class="jumbotron py-4">
            <h4>All categories</h4>
            <ul class="list-unstyled m-0">
                @foreach (var category in Model.Categories)
                {
                    <li><a class="card-link" href="#">@category.Name</a></li>
                }
            </ul>
        </div>
    </div>

    <div class="col-md-8 col-lg-9">
        <ul class="list-group">
            @foreach (var item in Model.Items)
            {
                <li class="list-group-item">
                    <div class="d-flex align-items-center">
                        <div class="img-cover">
                            <a class="card-link text-wrap" href="#"><img src="@Html.Raw(SetImagePath(item))" alt="@item.Name" /></a>
                        </div>
                        <div class="d-flex justify-content-between flex-column p-0 pl-3 w-100">
                            <h5><a class="card-link text-wrap" href="#">@item.Name</a></h5>
                            <div class="mb-1 limited-text line-clamp-1">
                                @for (int i = 0; i < item.Categories.Count; i++)
                                {
                                    <a class="ml-0" href="#" @*asp-route-categoryId="@item.Categories[i].Id"*@>@item.Categories[i].Name</a>
                                }

                                @if (item.TradeEnabled)
                                {
                                    @:exchange is available
                                }
                            </div>
                            <div class="text-black-50 mb-2 limited-text line-clamp-2 hidden-sm">@item.Description</div>
                            <div class="d-flex flex-row flex-wrap justify-content-between align-items-center">
                                <h5>Price: @(item.PriceType == PriceType.Definite ? item.Price?.ToString("C2", CultureInfo.CreateSpecificCulture("en-US")) : item.PriceType.ToString())</h5>
                                <div class="small text-muted">@item.PublishingDate</div>
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>